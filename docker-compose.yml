name: debates

services:
  minio-instance:
    image: minio/minio
    volumes:
      - ${MINIO_PATH}:/data
    ports:
      - ${MINIO_PORT}:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server --address 0.0.0.0:9000 --console-address :9001 /data
    networks:
      - debates_network

  solr:
    build:
      context: ./solr
    ports:
      - "8983:8983"
    networks:
      - debates_network
    healthcheck:
      test: curl --max-time 10 -f http://localhost:8983 || exit 1
      start_period: 60s
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ${SOLR_PATH}:/var/solr
    command:
      - solr-precreate
      - debates
      - /opt/solr/server/solr/configsets/debates

  mongodb-instance:
    image: mongo:7.0.8
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    networks:
      - debates_network
    volumes:
      - ${MONGO_PATH}:/data/db

  mongodb-express:
    image: mongo-express:1.0.2-18
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb-instance:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    networks:
      - debates_network
    depends_on:
      - mongodb-instance

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - solr
      - mongodb-instance
    networks:
      - debates_network
    environment:
      PUBLIC_SOLR_URL: ${SOLR_SELECT_URL}
      SECRET_MONGO_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb-instance:27017/
      SECRET_MONGO_DB: ${MONGO_DB}
      PUBLIC_MONGO_VIDEO_COLLECTION: ${MONGO_VIDEO_COLLECTION}
      PUBLIC_BACKEND_SERVER: http://dataloader:8000
    command: ["node", "build"]
    profiles:
      - vm
      - compose

  dataloader:
    build:
      context: ./dataloader
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    networks:
      - debates_network
    environment:
      SOLR_URL: ${SOLR_BASE_URL}
      MONGO_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb-instance:27017/
      MONGO_DB: ${MONGO_DB}
      MONGO_VIDEO_COLLECTION: ${MONGO_VIDEO_COLLECTION}
      S3_SERVER: ${S3_SERVER}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      API_HOST: "0.0.0.0"
    ports:
      - ${DATALOADER_PORT}:8000
    profiles:
      - vm
      - compose

  proxy:
    build:
      context: ./proxy
    depends_on:
      solr:
        condition: service_healthy
    networks:
      - debates_network
    ports:
      - "8010:80"
    environment:
      - SOLR_URL=http://solr:8983/solr

  reverse-proxy:
    image: nginx:alpine
    networks:
      - debates_network
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - type: bind
        source: /etc/letsencrypt/archive/debates.swisscustodian.ch/cert1.pem
        target: /etc/nginx/ssl/debates.swisscustodian.ch.cert
        read_only: true
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    secrets:
      - htpasswd
      - ssl_private_key
    profiles:
      - vm

secrets:
  htpasswd:
    file: /etc/apache2/.htpasswd
  ssl_private_key:
    file: /etc/letsencrypt/archive/debates.swisscustodian.ch/privkey1.pem

networks:
  debates_network:
    driver: bridge
