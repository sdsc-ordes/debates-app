{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/get-media-urls": {
            "post": {
                "summary": "Get Media Urls",
                "description": "Get signed media urls for a debate: these urls allow to directly access objects on S3",
                "operationId": "get_media_urls_get_media_urls_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/S3MediaUrlRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3MediaUrlResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mongo-metadata": {
            "post": {
                "summary": "Mongo Metadata",
                "description": "Get Metadata for Debates Object: get full debate with speakers, segments and subtitles",
                "operationId": "mongo_metadata_mongo_metadata_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MongoMetadataRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-solr": {
            "post": {
                "summary": "Search Solr",
                "description": "Fetch search results from Solr",
                "operationId": "search_solr_search_solr_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SolrRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "FacetFilter": {
                "properties": {
                    "facetField": {
                        "type": "string",
                        "title": "Facetfield",
                        "description": "Solr facet field name",
                        "examples": [
                            "statement_type"
                        ]
                    },
                    "facetValue": {
                        "type": "string",
                        "title": "Facetvalue",
                        "description": "Solr facet field value",
                        "examples": [
                            "translation"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "facetField",
                    "facetValue"
                ],
                "title": "FacetFilter"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "MongoMetadataRequest": {
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "Prefix",
                        "description": "S3 prefix",
                        "examples": [
                            "HRC_20220328T0000",
                            "wrong_value"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "prefix"
                ],
                "title": "MongoMetadataRequest"
            },
            "S3MediaUrlRequest": {
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "Prefix",
                        "description": "S3 prefix",
                        "examples": [
                            "HRC_20220328T10000"
                        ]
                    },
                    "objectKeys": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Objectkeys",
                        "description": "List of S3 object keys",
                        "examples": [
                            [
                                "HRC_20220328T10000-files.json"
                            ]
                        ]
                    },
                    "mediaKey": {
                        "type": "string",
                        "title": "Mediakey",
                        "description": "Object key for main media file",
                        "examples": [
                            "HRC_20220328T10000.mp4"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "objectKeys",
                    "mediaKey"
                ],
                "title": "S3MediaUrlRequest"
            },
            "S3MediaUrlResponse": {
                "properties": {
                    "signedUrls": {
                        "items": {
                            "$ref": "#/components/schemas/S3MediaUrls"
                        },
                        "type": "array",
                        "title": "Signedurls",
                        "description": "List of presigned URLs"
                    },
                    "signedMediaUrl": {
                        "type": "string",
                        "title": "Signedmediaurl",
                        "description": "Presigned URL for the main media file"
                    }
                },
                "type": "object",
                "required": [
                    "signedUrls",
                    "signedMediaUrl"
                ],
                "title": "S3MediaUrlResponse"
            },
            "S3MediaUrls": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Url"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label",
                        "description": "Label for Url"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "label"
                ],
                "title": "S3MediaUrls"
            },
            "SolrRequest": {
                "properties": {
                    "queryTerm": {
                        "type": "string",
                        "title": "Queryterm",
                        "description": "Solr query term can be empty",
                        "examples": [
                            "honor"
                        ]
                    },
                    "sortBy": {
                        "type": "string",
                        "title": "Sortby",
                        "description": "Solr sort option",
                        "examples": [
                            "start asc"
                        ]
                    },
                    "facetFields": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Facetfields",
                        "description": "Solr facet field to return",
                        "examples": [
                            [
                                "debate_schedule",
                                "statement_type"
                            ]
                        ]
                    },
                    "facetFilters": {
                        "items": {
                            "$ref": "#/components/schemas/FacetFilter"
                        },
                        "type": "array",
                        "title": "Facetfilters",
                        "description": "Solr facet filters with set values"
                    }
                },
                "type": "object",
                "required": [
                    "queryTerm",
                    "sortBy",
                    "facetFields",
                    "facetFilters"
                ],
                "title": "SolrRequest"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}